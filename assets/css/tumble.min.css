/**
* Author: Cameron Trow
* License: GPL-3
* Source Code: https://github.com/tumble1999/tumble1999.github.io
* 
* You may copy, distribute and modify the software as long as you
* track changes/dates in source files. Any modifications to or
* software including (via compiler) GPL-licensed code must also
* be made available under the GPL along with build & install
* instructions.
*/
:root{--color-black: black;--color-white: white;--color-yellow: #ffc107;--color-blue: #112233}html{scroll-behavior:smooth;margin:0;padding:0;height:100%;width:100%;position:relative}body{margin:0;padding:0;height:100%;width:100%;position:relative}*,*::before,*::after{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;word-wrap:break-word;margin:0}*{font-family:sans-serif}.container{margin-left:auto;margin-right:auto;max-width:1200px;width:90vw}a,a:visited{text-decoration:none;color:var(--color-yellow)}img,video{max-width:100%;height:auto}img.round,video.round{border-radius:50%}a.bean{text-transform:uppercase;display:inline;background:var(--color-yellow);color:var(--color-black);border-radius:10px;border-style:solid;border-width:5px 10px;border-color:var(--color-yellow);font-weight:bold;color:var(--color-black)}table{border-collapse:collapse;margin-top:20px;table-layout:fixed;width:100%}table thead{background-color:var(--color-yellow);color:var(--color-black)}table tbody tr:hover{background-color:rgba(0,0,0,.3)}table th,table td{border-right:solid .5px;border-left:solid .5px;border-color:rgba(128,128,128,.7);font-size:1.3em;padding:.5em}table th:first-child,table td:first-child{border-left:none}table th:last-child,table td:last-child{border-right:none}body{display:flex;flex-flow:column;min-height:100%;background-color:var(--color-black);gap:20px;height:auto}header,footer{padding-left:16px;padding-right:16px;background-color:var(--color-yellow);color:var(--color-black)}header a,header a:visited,footer a,footer a:visited{color:var(--color-black)}header{height:58px;display:flex;align-items:center}main{color:var(--color-white)}main .container{display:flex;flex-flow:column;gap:20px}.page-section{width:100%}.list,.swipy-list{display:flex;gap:20px;list-style:none;flex-flow:row}.list.block h3,.swipy-list.block h3{margin-top:0}.list.vertical,.swipy-list.vertical{flex-flow:column}.list.vertical>*,.swipy-list.vertical>*{width:100%}.list.vertical .img-container,.swipy-list.vertical .img-container{max-width:20%;height:100%}.list>*:not(.list),.swipy-list>*:not(.list){display:flex;flex-flow:column;gap:20px;align-items:flex-start;flex-grow:1}.list{flex-wrap:wrap}.swipy-list{overflow:hidden}.swipy-list>*{width:100%;flex-shrink:0}.card{background-color:var(--color-blue);color:var(--color-white);padding:20px}div.card{display:flex;gap:20px}div.card h1,div.card h2,div.card h3,div.card h4,div.card h5,div.card h6{display:inline}div.card .item-info{display:flex;flex-flow:column;gap:20px}.item-meta>*{flex-grow:0}.utterances{max-width:100%}header img{height:48px}header a{display:flex;align-items:center;gap:10px}footer{flex-shrink:0;flex-basis:56px;display:flex;justify-content:center;flex-flow:column;text-align:center;margin-top:auto}footer a,footer a:visited{font-weight:bold;display:inline}@media(min-width: 768px){.block.list>*,.block.list .list-item,.block.swipy-list>*,.block.swipy-list .list-item{width:580px}}@media(min-width: 1200px){.block.list>*,.block.list .card,.block.swipy-list>*,.block.swipy-list .card{width:280px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
